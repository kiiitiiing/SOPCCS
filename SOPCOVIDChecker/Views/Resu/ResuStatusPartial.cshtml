@model PaginatedList<ResultLess>
@{
    var dateRange = ViewBag.StartDate + " - " + ViewBag.EndDate;
}


@if (Model.Count() != 0)
{
    <table class="table table-hover table-bordered table-striped" style="white-space: nowrap!important ">
        <thead class="bg-gray">
            <tr>
                <th class="text-center text-sm">
                    SAMPLE ID
                </th>
                <th class="text-center text-sm">
                    PATIENT NAME
                </th>
                <th class="text-center text-sm">
                    DRU
                </th>
                <th class="text-center text-sm">
                    SENT TO
                </th>
                <th class="text-center text-sm">
                    RESULT
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sop in Model)
            {
                var facility = !string.IsNullOrEmpty(sop.Lab) ? sop.Lab : "RESU";
                <tr>
                    <td class="text-center text-sm">
                        <label>@sop.SampleId</label>
                    </td>
                    <td class="text-center text-sm">
                        @sop.PatientName
                    </td>
                    <td class="text-center text-sm">
                        @sop.DRU
                    </td>
                    <td class="text-center text-sm">
                        @facility
                    </td>
                    <td class="text-center text-sm">
                        @sop.Status
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning">
        <span>
            <i class="fa fa-exclamation-triangle"></i> No Sample found!
        </span>
    </div>
}


@await Html.PartialAsync("~/Views/Shared/_PageList.cshtml", new PageListModel
{
    Action = "ResuStatus",
    HasNextPage = Model.HasNextPage,
    HasPreviousPage = Model.HasPreviousPage,
    PageIndex = Model._pageIndex,
    TotalPages = Model._totalPages,
    Parameters = new Dictionary<string, string>
    {
        { "page", Model._pageIndex.ToString() },
        { "q", ViewBag.Search },
        { "dr", dateRange },
        { "f", ViewBag.Filter }
    }
})

<script>
    $('#ctr').html('@Model._itemCount');
</script>